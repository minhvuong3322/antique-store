version: '3.8'

# =====================================================
# Production Docker Compose với HTTPS Support
# =====================================================
# Bao gồm: API, Database, Nginx Reverse Proxy, Certbot
# =====================================================

services:
  # ============ Backend API ============
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: antique-store-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: antique_store
      DB_USER: root
      DB_PASSWORD: ${DB_PASSWORD:-antique123}
      DB_DIALECT: mysql
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      
      # SSL Configuration (Optional - nếu backend cũng dùng SSL)
      # Thường thì chỉ Nginx dùng SSL, backend dùng HTTP
      ENABLE_SSL: "false"
      
      # CORS - Allow Nginx proxy
      CORS_ORIGIN: ${CORS_ORIGIN:-https://antiquestore.vn,https://www.antiquestore.vn}
    networks:
      - antique-network
    volumes:
      - ./uploads:/app/uploads
      # Mount SSL certificates (nếu backend cần)
      # - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - db
    # Chỉ expose port trong internal network, không ra ngoài
    expose:
      - "5000"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ============ MySQL Database ============
  db:
    image: mysql:8.0
    container_name: antique-store-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-antique123}
      MYSQL_DATABASE: antique_store
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    networks:
      - antique-network
    volumes:
      - mysql-data:/var/lib/mysql
      - ./database/antique_store.sql:/docker-entrypoint-initdb.d/schema.sql
    expose:
      - "3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-antique123}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============ Nginx Reverse Proxy ============
  nginx:
    image: nginx:alpine
    container_name: antique-store-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Nginx configuration
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      
      # SSL Certificates (Let's Encrypt)
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/lib/letsencrypt:/var/lib/letsencrypt:ro
      
      # Certbot webroot
      - certbot-webroot:/var/www/certbot:ro
      
      # Static files
      - ./uploads:/var/www/antiquestore/uploads:ro
      
      # Custom error pages (optional)
      # - ./nginx-errors:/usr/share/nginx/html:ro
      
      # Logs
      - nginx-logs:/var/log/nginx
    networks:
      - antique-network
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============ Certbot (SSL Certificate Auto-Renewal) ============
  certbot:
    image: certbot/certbot
    container_name: antique-store-certbot
    volumes:
      # SSL certificates
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      
      # Webroot for validation
      - certbot-webroot:/var/www/certbot
      
      # Logs
      - certbot-logs:/var/log/letsencrypt
    
    # Command để tự động renew (chạy 2 lần/ngày)
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot --webroot-path=/var/www/certbot --quiet; sleep 12h & wait $${!}; done;'"
    
    networks:
      - antique-network

  # ============ phpMyAdmin (Optional - Database Management) ============
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: antique-store-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-antique123}
      PMA_ABSOLUTE_URI: https://phpmyadmin.antiquestore.vn/
    networks:
      - antique-network
    expose:
      - "80"
    # Nếu muốn expose qua Nginx, thêm vào nginx.conf:
    # location /phpmyadmin {
    #     proxy_pass http://phpmyadmin:80;
    # }

# ============ Networks ============
networks:
  antique-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ============ Volumes ============
volumes:
  mysql-data:
    driver: local
  nginx-logs:
    driver: local
  certbot-logs:
    driver: local
  certbot-webroot:
    driver: local

# =====================================================
# INSTRUCTIONS
# =====================================================

# 1. Chuẩn bị:
#    - Có domain và trỏ DNS về server
#    - Mở port 80, 443 trên firewall
#    - Cập nhật domain trong nginx.conf
#
# 2. Tạo .env file:
#    DB_PASSWORD=your-secure-password
#    JWT_SECRET=your-super-secret-jwt-key
#    CORS_ORIGIN=https://yourdomain.com
#
# 3. Lấy SSL certificate lần đầu:
#    sudo certbot certonly --standalone -d api.yourdomain.com
#    (Dừng Nginx trước khi chạy lệnh này)
#
# 4. Start services:
#    docker-compose -f docker-compose.production.yml up -d
#
# 5. Kiểm tra logs:
#    docker-compose -f docker-compose.production.yml logs -f
#
# 6. Test HTTPS:
#    curl -I https://api.yourdomain.com/api/v1/health
#
# 7. Monitor certificate renewal:
#    docker-compose -f docker-compose.production.yml logs certbot
#
# =====================================================

