#!/bin/bash

# ==============================================================================
# Let's Encrypt SSL Certificate Setup Script
# ==============================================================================
# Script n√†y gi√∫p t·ª± ƒë·ªông setup SSL certificate cho production
# ==============================================================================

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${GREEN}========================================${NC}"
echo -e "${GREEN}Let's Encrypt SSL Setup${NC}"
echo -e "${GREEN}========================================${NC}"

# Ki·ªÉm tra quy·ªÅn root
if [ "$EUID" -ne 0 ]; then 
    echo -e "${RED}‚ùå Script n√†y c·∫ßn quy·ªÅn root. Ch·∫°y v·ªõi sudo.${NC}"
    exit 1
fi

# Nh·∫≠p domain
echo -e "\n${YELLOW}Nh·∫≠p domain c·ªßa b·∫°n (v√≠ d·ª•: api.antiquestore.vn):${NC}"
read -r DOMAIN

if [ -z "$DOMAIN" ]; then
    echo -e "${RED}‚ùå Domain kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!${NC}"
    exit 1
fi

# Nh·∫≠p email
echo -e "\n${YELLOW}Nh·∫≠p email c·ªßa b·∫°n (cho Let's Encrypt notifications):${NC}"
read -r EMAIL

if [ -z "$EMAIL" ]; then
    echo -e "${RED}‚ùå Email kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!${NC}"
    exit 1
fi

echo -e "\n${BLUE}Domain: ${YELLOW}$DOMAIN${NC}"
echo -e "${BLUE}Email: ${YELLOW}$EMAIL${NC}"
echo -e "\n${YELLOW}B·∫°n c√≥ ch·∫Øc ch·∫Øn? (y/n):${NC}"
read -r CONFIRM

if [[ ! $CONFIRM =~ ^[Yy]$ ]]; then
    echo -e "${RED}ƒê√£ h·ªßy.${NC}"
    exit 0
fi

# Ki·ªÉm tra Certbot
echo -e "\n${YELLOW}Ki·ªÉm tra Certbot...${NC}"
if ! command -v certbot &> /dev/null; then
    echo -e "${YELLOW}Certbot ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t. ƒêang c√†i ƒë·∫∑t...${NC}"
    
    # Detect OS
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS=$NAME
        
        if [[ "$OS" == *"Ubuntu"* ]] || [[ "$OS" == *"Debian"* ]]; then
            apt update
            apt install -y certbot python3-certbot-nginx
        elif [[ "$OS" == *"CentOS"* ]] || [[ "$OS" == *"Red Hat"* ]]; then
            yum install -y certbot python3-certbot-nginx
        else
            echo -e "${RED}‚ùå OS kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£. Vui l√≤ng c√†i Certbot th·ªß c√¥ng.${NC}"
            exit 1
        fi
    fi
fi

echo -e "${GREEN}‚úÖ Certbot ƒë√£ s·∫µn s√†ng${NC}"

# Ki·ªÉm tra DNS
echo -e "\n${YELLOW}Ki·ªÉm tra DNS record...${NC}"
DOMAIN_IP=$(dig +short "$DOMAIN" | tail -n1)
SERVER_IP=$(curl -s ifconfig.me)

echo -e "${BLUE}Domain IP: ${YELLOW}$DOMAIN_IP${NC}"
echo -e "${BLUE}Server IP: ${YELLOW}$SERVER_IP${NC}"

if [ "$DOMAIN_IP" != "$SERVER_IP" ]; then
    echo -e "${RED}‚ö†Ô∏è  WARNING: Domain IP kh√¥ng kh·ªõp v·ªõi Server IP!${NC}"
    echo -e "${YELLOW}ƒê·∫£m b·∫£o DNS A record c·ªßa $DOMAIN tr·ªè v·ªÅ $SERVER_IP${NC}"
    echo -e "\n${YELLOW}B·∫°n c√≥ mu·ªën ti·∫øp t·ª•c? (y/n):${NC}"
    read -r CONTINUE
    if [[ ! $CONTINUE =~ ^[Yy]$ ]]; then
        exit 0
    fi
fi

# Ki·ªÉm tra port 80/443
echo -e "\n${YELLOW}Ki·ªÉm tra port 80 v√† 443...${NC}"
if lsof -Pi :80 -sTCP:LISTEN -t >/dev/null 2>&1; then
    echo -e "${YELLOW}‚ö†Ô∏è  Port 80 ƒëang ƒë∆∞·ª£c s·ª≠ d·ª•ng. D·ª´ng service?${NC}"
    SERVICE=$(lsof -Pi :80 -sTCP:LISTEN | grep LISTEN | awk '{print $1}' | head -1)
    echo -e "${BLUE}Service ƒëang ch·∫°y: ${YELLOW}$SERVICE${NC}"
    echo -e "${YELLOW}D·ª´ng $SERVICE? (y/n):${NC}"
    read -r STOP_SERVICE
    if [[ $STOP_SERVICE =~ ^[Yy]$ ]]; then
        if [[ "$SERVICE" == "nginx" ]]; then
            systemctl stop nginx
        elif [[ "$SERVICE" == "apache2" ]]; then
            systemctl stop apache2
        else
            echo -e "${RED}Vui l√≤ng d·ª´ng service th·ªß c√¥ng: $SERVICE${NC}"
            exit 1
        fi
    else
        echo -e "${RED}Certbot c·∫ßn port 80 ƒë·ªÉ x√°c th·ª±c. ƒê√£ h·ªßy.${NC}"
        exit 1
    fi
fi

# T·∫°o certificate
echo -e "\n${GREEN}========================================${NC}"
echo -e "${GREEN}ƒêang t·∫°o SSL certificate...${NC}"
echo -e "${GREEN}========================================${NC}"

certbot certonly --standalone \
    -d "$DOMAIN" \
    --email "$EMAIL" \
    --agree-tos \
    --no-eff-email \
    --preferred-challenges http

if [ $? -eq 0 ]; then
    echo -e "\n${GREEN}========================================${NC}"
    echo -e "${GREEN}‚úÖ SSL Certificate ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!${NC}"
    echo -e "${GREEN}========================================${NC}"
    
    echo -e "\n${BLUE}üìÅ Certificate Location:${NC}"
    echo -e "   Private Key: ${YELLOW}/etc/letsencrypt/live/$DOMAIN/privkey.pem${NC}"
    echo -e "   Certificate: ${YELLOW}/etc/letsencrypt/live/$DOMAIN/fullchain.pem${NC}"
    echo -e "   Chain: ${YELLOW}/etc/letsencrypt/live/$DOMAIN/chain.pem${NC}"
    
    # C·∫≠p nh·∫≠t .env
    echo -e "\n${YELLOW}C·∫≠p nh·∫≠t backend/.env:${NC}"
    echo -e "${BLUE}ENABLE_SSL=true${NC}"
    echo -e "${BLUE}SSL_KEY_PATH=/etc/letsencrypt/live/$DOMAIN/privkey.pem${NC}"
    echo -e "${BLUE}SSL_CERT_PATH=/etc/letsencrypt/live/$DOMAIN/fullchain.pem${NC}"
    
    # Setup auto-renewal
    echo -e "\n${YELLOW}Setup auto-renewal...${NC}"
    
    # Test renewal
    certbot renew --dry-run
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Auto-renewal test th√†nh c√¥ng${NC}"
        
        # Enable timer
        if systemctl list-unit-files | grep -q certbot.timer; then
            systemctl enable certbot.timer
            systemctl start certbot.timer
            echo -e "${GREEN}‚úÖ Certbot timer ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t${NC}"
        else
            # Setup cron job
            echo -e "${YELLOW}Setup cron job cho auto-renewal...${NC}"
            CRON_CMD="0 0,12 * * * certbot renew --quiet --post-hook 'systemctl reload nginx'"
            (crontab -l 2>/dev/null; echo "$CRON_CMD") | crontab -
            echo -e "${GREEN}‚úÖ Cron job ƒë√£ ƒë∆∞·ª£c t·∫°o${NC}"
        fi
    fi
    
    # Start l·∫°i service
    if systemctl is-active --quiet nginx; then
        echo -e "\n${YELLOW}Kh·ªüi ƒë·ªông l·∫°i Nginx...${NC}"
        systemctl start nginx
        echo -e "${GREEN}‚úÖ Nginx ƒë√£ ƒë∆∞·ª£c kh·ªüi ƒë·ªông${NC}"
    fi
    
    echo -e "\n${GREEN}========================================${NC}"
    echo -e "${GREEN}üéâ Setup ho√†n t·∫•t!${NC}"
    echo -e "${GREEN}========================================${NC}"
    
    echo -e "\n${YELLOW}Next Steps:${NC}"
    echo -e "1. C·∫≠p nh·∫≠t backend/.env v·ªõi SSL paths ·ªü tr√™n"
    echo -e "2. C·∫≠p nh·∫≠t nginx.conf v·ªõi domain: $DOMAIN"
    echo -e "3. Restart services"
    echo -e "4. Test: ${BLUE}curl -I https://$DOMAIN${NC}"
    
else
    echo -e "\n${RED}‚ùå L·ªói khi t·∫°o certificate!${NC}"
    echo -e "${YELLOW}Ki·ªÉm tra:${NC}"
    echo -e "1. DNS record ƒë√£ tr·ªè ƒë√∫ng ch∆∞a?"
    echo -e "2. Port 80 c√≥ m·ªü kh√¥ng?"
    echo -e "3. Firewall c√≥ block kh√¥ng?"
    exit 1
fi

exit 0

