/**
 * Test Support Messages Script
 * Ki·ªÉm tra xem c√≥ tin nh·∫Øn h·ªó tr·ª£ n√†o trong database kh√¥ng
 */

const { sequelize } = require('../src/config/database');
const { SupportMessage, User } = require('../src/models');

async function testSupportMessages() {
    try {
        console.log('üîç ƒêang ki·ªÉm tra support messages...\n');

        // Test 1: ƒê·∫øm t·ªïng s·ªë tin nh·∫Øn
        const totalMessages = await SupportMessage.count();
        console.log(`üìä T·ªïng s·ªë tin nh·∫Øn trong database: ${totalMessages}\n`);

        if (totalMessages === 0) {
            console.log('‚ö†Ô∏è  Kh√¥ng c√≥ tin nh·∫Øn n√†o trong database!');
            console.log('üí° H√£y g·ª≠i tin nh·∫Øn t·ª´ trang Contact ƒë·ªÉ test.\n');
            return;
        }

        // Test 2: L·∫•y t·∫•t c·∫£ tin nh·∫Øn v·ªõi th√¥ng tin user
        const messages = await SupportMessage.findAll({
            include: [
                {
                    model: User,
                    as: 'user',
                    attributes: ['id', 'full_name', 'email']
                }
            ],
            order: [['created_at', 'DESC']]
        });

        console.log('üì® Danh s√°ch tin nh·∫Øn:\n');
        messages.forEach((msg, index) => {
            console.log(`--- Tin nh·∫Øn ${index + 1} ---`);
            console.log(`ID: ${msg.id}`);
            console.log(`Subject: ${msg.subject}`);
            console.log(`Status: ${msg.status}`);
            console.log(`Priority: ${msg.priority}`);
            console.log(`From: ${msg.user ? msg.user.email : (msg.guest_email || 'Anonymous')}`);
            console.log(`Created: ${msg.created_at}`);
            console.log(`Has response: ${msg.admin_response ? 'Yes' : 'No'}`);
            console.log('');
        });

        // Test 3: Test nh∆∞ admin API
        console.log('\nüîß Test Admin API Query:\n');
        const { count, rows } = await SupportMessage.findAndCountAll({
            include: [
                {
                    model: User,
                    as: 'user',
                    attributes: ['id', 'full_name', 'email', 'phone']
                }
            ]
        });

        console.log(`‚úÖ API tr·∫£ v·ªÅ: ${count} messages`);

    } catch (error) {
        console.error('‚ùå L·ªói:', error.message);
        console.error(error);
    } finally {
        await sequelize.close();
        console.log('\n‚ú® Ho√†n th√†nh!');
    }
}

testSupportMessages();

