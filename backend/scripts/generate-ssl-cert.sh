#!/bin/bash

# ==============================================================================
# SSL Certificate Generator for Development
# ==============================================================================
# T·∫°o self-signed SSL certificate cho m√¥i tr∆∞·ªùng development
# Ch·ª©ng ch·ªâ n√†y KH√îNG ƒë∆∞·ª£c tin t∆∞·ªüng m·∫∑c ƒë·ªãnh b·ªüi tr√¨nh duy·ªát
# v√† ch·ªâ n√™n s·ª≠ d·ª•ng cho development/testing
# ==============================================================================

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}========================================${NC}"
echo -e "${GREEN}SSL Certificate Generator${NC}"
echo -e "${GREEN}========================================${NC}"

# T·∫°o th∆∞ m·ª•c certs n·∫øu ch∆∞a c√≥
CERT_DIR="../certs"
mkdir -p "$CERT_DIR"

# Th√¥ng tin certificate
COUNTRY="VN"
STATE="HCM"
CITY="Ho Chi Minh"
ORGANIZATION="Antique Store"
COMMON_NAME="localhost"
DAYS_VALID=365

echo -e "\n${YELLOW}ƒêang t·∫°o SSL certificate...${NC}"

# Ki·ªÉm tra xem ƒë√£ c√≥ certificate ch∆∞a
if [ -f "$CERT_DIR/localhost.key" ] && [ -f "$CERT_DIR/localhost.crt" ]; then
    echo -e "${YELLOW}Certificate ƒë√£ t·ªìn t·∫°i!${NC}"
    read -p "B·∫°n c√≥ mu·ªën t·∫°o l·∫°i? (y/n): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo -e "${GREEN}Gi·ªØ nguy√™n certificate hi·ªán t·∫°i.${NC}"
        exit 0
    fi
fi

# T·∫°o private key (2048-bit RSA)
echo -e "${YELLOW}B∆∞·ªõc 1: T·∫°o private key...${NC}"
openssl genrsa -out "$CERT_DIR/localhost.key" 2048

# T·∫°o certificate signing request (CSR) v√† self-signed certificate
echo -e "${YELLOW}B∆∞·ªõc 2: T·∫°o self-signed certificate...${NC}"
openssl req -new -x509 \
    -key "$CERT_DIR/localhost.key" \
    -out "$CERT_DIR/localhost.crt" \
    -days $DAYS_VALID \
    -subj "/C=$COUNTRY/ST=$STATE/L=$CITY/O=$ORGANIZATION/CN=$COMMON_NAME" \
    -addext "subjectAltName=DNS:localhost,DNS:*.localhost,IP:127.0.0.1,IP:0.0.0.0"

# Set permissions
chmod 600 "$CERT_DIR/localhost.key"
chmod 644 "$CERT_DIR/localhost.crt"

echo -e "\n${GREEN}‚úÖ Certificate ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!${NC}"
echo -e "${GREEN}========================================${NC}"
echo -e "üìÅ Location:"
echo -e "   Private Key: ${YELLOW}$CERT_DIR/localhost.key${NC}"
echo -e "   Certificate: ${YELLOW}$CERT_DIR/localhost.crt${NC}"
echo -e "\nüìÖ Valid: ${YELLOW}$DAYS_VALID days${NC}"
echo -e "\n${YELLOW}‚ö†Ô∏è  QUAN TR·ªåNG:${NC}"
echo -e "   ƒê√¢y l√† self-signed certificate, tr√¨nh duy·ªát s·∫Ω c·∫£nh b√°o"
echo -e "   'Not Secure' ho·∫∑c 'Certificate Invalid'"
echo -e "\n${GREEN}üîß ƒê·ªÉ trust certificate:${NC}"
echo -e "\n   ${YELLOW}Windows:${NC}"
echo -e "   1. M·ªü Chrome/Edge, truy c·∫≠p https://localhost:5000"
echo -e "   2. Click 'Advanced' ‚Üí 'Proceed to localhost (unsafe)'"
echo -e "   Ho·∫∑c:"
echo -e "   PowerShell (as Admin):"
echo -e "   Import-Certificate -FilePath '$CERT_DIR/localhost.crt' -CertStoreLocation Cert:\\LocalMachine\\Root"
echo -e "\n   ${YELLOW}Mac:${NC}"
echo -e "   sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain $CERT_DIR/localhost.crt"
echo -e "\n   ${YELLOW}Linux (Ubuntu/Debian):${NC}"
echo -e "   sudo cp $CERT_DIR/localhost.crt /usr/local/share/ca-certificates/"
echo -e "   sudo update-ca-certificates"
echo -e "\n   ${YELLOW}Chrome Flag:${NC}"
echo -e "   chrome://flags/#allow-insecure-localhost ‚Üí Enable"
echo -e "\n${GREEN}========================================${NC}"
echo -e "${GREEN}‚úÖ Setup ho√†n t·∫•t!${NC}"
echo -e "${GREEN}========================================${NC}"

# Hi·ªÉn th·ªã th√¥ng tin certificate
echo -e "\n${YELLOW}Th√¥ng tin Certificate:${NC}"
openssl x509 -in "$CERT_DIR/localhost.crt" -noout -text | grep -E "(Subject:|Issuer:|Not Before|Not After|DNS:)"

exit 0

